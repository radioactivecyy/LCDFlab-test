////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DisplaySync.vf
// /___/   /\     Timestamp : 11/03/2021 14:55:17
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog D:/lab7/ScoreBoard/DisplaySync.vf -w D:/lab7/ScoreBoard/DisplaySync.sch
//Design Name: DisplaySync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module INV4_HXILINX_DisplaySync (O0, O1, O2, O3, I0, I1, I2, I3);
    

   output O0;
   output O1;
   output O2;
   output O3;

   input  I0;
   input  I1;
   input  I2;
   input  I3;

assign O0 = !I0;
assign O1 = !I1;
assign O2 = !I2;
assign O3 = !I3;

endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_DisplaySync (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 1ns / 1ps

module MUX4to1_MUSER_DisplaySync(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 s, 
                                 o);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] s;
   output o;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_1));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_3));
   AND2  XLXI_3 (.I0(XLXN_3), 
                .I1(XLXN_1), 
                .O(XLXN_11));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_1), 
                .O(XLXN_12));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_3), 
                .O(XLXN_13));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_14));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_11), 
                .O(XLXN_19));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_12), 
                .O(XLXN_20));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_13), 
                .O(XLXN_21));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_14), 
                 .O(XLXN_22));
   OR4  XLXI_11 (.I0(XLXN_22), 
                .I1(XLXN_21), 
                .I2(XLXN_20), 
                .I3(XLXN_19), 
                .O(o));
endmodule
`timescale 1ns / 1ps

module Mux4to1b4_MUSER_DisplaySync(I0, 
                                   I1, 
                                   I2, 
                                   I3, 
                                   s, 
                                   o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_2;
   wire XLXN_11;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_53;
   wire XLXN_63;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_2));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_11));
   AND2  XLXI_3 (.I0(XLXN_11), 
                .I1(XLXN_2), 
                .O(XLXN_13));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_2), 
                .O(XLXN_14));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_11), 
                .O(XLXN_15));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_53));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_13), 
                .O(XLXN_63));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_14), 
                .O(XLXN_65));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_15), 
                .O(XLXN_66));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_53), 
                 .O(XLXN_67));
   AND2  XLXI_11 (.I0(I0[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_69));
   AND2  XLXI_12 (.I0(I1[1]), 
                 .I1(XLXN_14), 
                 .O(XLXN_70));
   AND2  XLXI_13 (.I0(I2[1]), 
                 .I1(XLXN_15), 
                 .O(XLXN_71));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_53), 
                 .O(XLXN_72));
   AND2  XLXI_15 (.I0(I0[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_73));
   AND2  XLXI_16 (.I0(I1[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_74));
   AND2  XLXI_17 (.I0(I2[2]), 
                 .I1(XLXN_15), 
                 .O(XLXN_75));
   AND2  XLXI_18 (.I0(I3[2]), 
                 .I1(XLXN_53), 
                 .O(XLXN_76));
   AND2  XLXI_19 (.I0(I0[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_77));
   AND2  XLXI_20 (.I0(I1[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_78));
   AND2  XLXI_21 (.I0(I2[3]), 
                 .I1(XLXN_15), 
                 .O(XLXN_79));
   AND2  XLXI_22 (.I0(I3[3]), 
                 .I1(XLXN_53), 
                 .O(XLXN_80));
   OR4  XLXI_24 (.I0(XLXN_67), 
                .I1(XLXN_66), 
                .I2(XLXN_65), 
                .I3(XLXN_63), 
                .O(o[0]));
   OR4  XLXI_25 (.I0(XLXN_72), 
                .I1(XLXN_71), 
                .I2(XLXN_70), 
                .I3(XLXN_69), 
                .O(o[1]));
   OR4  XLXI_26 (.I0(XLXN_76), 
                .I1(XLXN_75), 
                .I2(XLXN_74), 
                .I3(XLXN_73), 
                .O(o[2]));
   OR4  XLXI_27 (.I0(XLXN_80), 
                .I1(XLXN_79), 
                .I2(XLXN_78), 
                .I3(XLXN_77), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module DisplaySync(Hexs, 
                   LES, 
                   point, 
                   Scan, 
                   AN, 
                   HEX, 
                   LE, 
                   p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output p;
   
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   
   Mux4to1b4_MUSER_DisplaySync  XLXI_1 (.I0(Hexs[3:0]), 
                                       .I1(Hexs[7:4]), 
                                       .I2(Hexs[11:8]), 
                                       .I3(Hexs[15:12]), 
                                       .s(Scan[1:0]), 
                                       .o(HEX[3:0]));
   MUX4to1_MUSER_DisplaySync  XLXI_7 (.I0(point[0]), 
                                     .I1(point[1]), 
                                     .I2(point[2]), 
                                     .I3(point[3]), 
                                     .s(Scan[1:0]), 
                                     .o(p));
   MUX4to1_MUSER_DisplaySync  XLXI_8 (.I0(LES[0]), 
                                     .I1(LES[1]), 
                                     .I2(LES[2]), 
                                     .I3(LES[3]), 
                                     .s(Scan[1:0]), 
                                     .o(LE));
   (* HU_SET = "XLXI_10_0" *) 
   D2_4E_HXILINX_DisplaySync  XLXI_10 (.A0(Scan[0]), 
                                      .A1(Scan[1]), 
                                      .E(XLXN_30), 
                                      .D0(XLXN_34), 
                                      .D1(XLXN_33), 
                                      .D2(XLXN_32), 
                                      .D3(XLXN_31));
   VCC  XLXI_11 (.P(XLXN_30));
   (* HU_SET = "XLXI_12_1" *) 
   INV4_HXILINX_DisplaySync  XLXI_12 (.I0(XLXN_31), 
                                     .I1(XLXN_32), 
                                     .I2(XLXN_33), 
                                     .I3(XLXN_34), 
                                     .O0(AN[3]), 
                                     .O1(AN[2]), 
                                     .O2(AN[1]), 
                                     .O3(AN[0]));
endmodule
